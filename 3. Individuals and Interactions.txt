# 3. INDIVIDUALS AND INTERACTIONS
---------------------------------

* The cost of multitasking
--------------------------

* Agile Principle 3
-------------------
Deliver working software frequently, from a couple of weeks to a couple of months, with a preference to the shorter timescale.

Shorter timescales = Sprints

* Scrum
-------
Avoid multitasking is a core idea of this framework.

---------------------------------------------------------------------------------------------------------------------------------------------------------------------

* Avoid work handoffs
---------------------

* Handoffs
----------
Finishing work on a task and then giving it to another person or department for processing.


* Queue size
------------
Batches of work that go through the system.

------------------------------------------------------------------------------------------------------------------------------------------------------------------

* The Penny Game
----------------
The more productive way to work as an agile team is by moving around small batches of work and eliminating handoffs.  Even if your own productivity decreases.

------------------------------------------------------------------------------------------------------------------------------------------------------------------

* Deliver at a predictable pace
-------------------------------

* Agile Principle 8
-------------------
Agile processes promote SUSTAINABLE DEVELOPMENT. The sponsors, developers, users should be able to maintain a CONSTANT PACE indefinitely.

		Predictable = Sustainable-and-constant

* Sprint
--------
A timeboxed iteration of work intended to deliver a shippable portion of a product in a shorter time scale.

* Sprinkle
----------
Term from SCRUM that is being used here because SCRUM is the most popular Agile Framework.
	  -----					-----

	* AGILE TEAMS DELIVER IN SHORT TIME FRAMES

	* PREDICTABLE DELIVERY OVER A WELL-PLANNED PROJECT

	* PLANNING IS DIFFERENT THAN DELIVERING

-------------------------------------------------------------------------------------------------------------------------------------------------------------------

* Cross-functional teams
------------------------

* Agile Principles 5 and 11
---------------------------
Small, motivated self-organized team of generalists.

Agile teams should be cross-functional.

-------------------------------------------------------------------------------------------------------------------------------------------------------------------

* User stories
--------------

* Agile Principle 6 and Agile Value 2
-------------------------------------
Face-to-face communication and independence from documentation.

* Format for a user story
-------------------------
	
	As a [USER], I want [SOME FEATURE] so that I can [GET SOME VALUE].

* What vs. How ---> This is a concept that comes from SCRUM
--------------
The product owner worries about what the customer wants, and the development team decides how to deliver it.

* Remember that user stories are not an agile version of requirements.

* Requirements tell the developer exactly what to do.

* User stories allow to have a future conversation. It isn't designed to show the answers, but instead it helps the team to ask the right questions.

------------------------------------------------------------------------------------------------------------------------------------------------------------------

* User stories: Common challenges
---------------------------------

* Example of a bad user story 1:
--------------------------------
As a restaurant owner, I want to be able to print out, email, and text my reservation list so that we know how many people to expect.

	This user story is not independant is really three stories in one, for that reason it would be very difficult to estimate and deliver.

* Example of a bad user story 2:
--------------------------------
As a customer, I want an email copy of my receipt so that I can have it on my phone.

	This story doesn't have a clear value statement.  I doesn't say why the customer might value a copy o their phone.

* Example of a bad user story 3:
--------------------------------
As a developer, I want to design the databases tables so that the restaurant owner can add reservation information.

	This user story probably came from a requirements document.  This is very usual when organizations are transitioning from waterfall.  It talks about techical requirements.

	
	* THE PRODUCT OWNER WOULD BE ABLE TO WRITE USER STORIES WITH A SINGLE VALUE STATEMENT

-------------------------------------------------------------------------------------------------------------------------------------------------------------------




































